"0","# First, let's create a function to convert timestamp ranges to a long-format dataframe"
"0","create_timeline_data <- function(episode_id, timestamp_ranges, candidate) {"
"0","  if (is.na(timestamp_ranges) || timestamp_ranges == ""none"" || timestamp_ranges == """") {"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  ranges <- unlist(strsplit(timestamp_ranges, "" and ""))"
"0","  segments <- data.frame()"
"0","  "
"0","  for (range in ranges) {"
"0","    times <- unlist(strsplit(range, ""-""))"
"0","    if (length(times) != 2) next"
"0","    "
"0","    # Convert start time to seconds"
"0","    start_parts <- as.numeric(unlist(strsplit(times[1], "":"")))"
"0","    start_seconds <- if (length(start_parts) == 2) start_parts[1] * 60 + start_parts[2] else start_parts[1]"
"0","    "
"0","    # Convert end time to seconds"
"0","    end_parts <- as.numeric(unlist(strsplit(times[2], "":"")))"
"0","    end_seconds <- if (length(end_parts) == 2) end_parts[1] * 60 + end_parts[2] else end_parts[1]"
"0","    "
"0","    segment <- data.frame("
"0","      episode_id = episode_id,"
"0","      start = start_seconds,"
"0","      end = end_seconds,"
"0","      candidate = candidate"
"0","    )"
"0","    "
"0","    segments <- rbind(segments, segment)"
"0","  }"
"0","  "
"0","  return(segments)"
"0","}"
"0",""
"0","# Process the data to create a timeline dataset"
"0","timeline_data <- data.frame()"
"0",""
"0","for (i in 1:nrow(snl_airtime)) {"
"0","  episode <- snl_airtime$episode[i]"
"0","  "
"0","  # Process Trump segments"
"0","  trump_segments <- create_timeline_data("
"0","    episode, "
"0","    snl_airtime$`trump air time stamps`[i], "
"0","    ""Trump"""
"0","  )"
"0","  "
"0","  # Process Harris segments"
"0","  harris_segments <- create_timeline_data("
"0","    episode, "
"0","    snl_airtime$`harris air time stamps`[i], "
"0","    ""Harris"""
"0","  )"
"0","  "
"0","  timeline_data <- rbind(timeline_data, trump_segments, harris_segments)"
"0","}"
"2","Warning: Unknown or uninitialised column: `episode`."
"2","Error in data.frame(episode_id = episode_id, start = start_seconds, end = end_seconds,  : 
  arguments imply differing number of rows: 0, 1
"
